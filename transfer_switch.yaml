substitutions:
  devicename: transfer-switch
  friendly_name: Transfer Switch

esphome:
  name: $devicename
  friendly_name: $friendly_name
  platformio_options:
    board_build.f_cpu: 240000000L

esp32:
  board: esp32dev
  framework:
    type: arduino
    version: 2.0.11

preferences:
  flash_write_interval: 1d

external_components:
  - source: github://dima-zhemkov/esphome-components@main
    components: [fast_adc, ac_voltage, transfer_switch]
    refresh: 1s

# Enable logging
logger:
  level: DEBUG
  baud_rate: 0

# Enable Home Assistant API
api:

ota:

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: true

output:
  - platform: gpio
    id: relay
    pin: GPIO4

# The overall frequency of the analog-to-digital conversion process, calculated as
# the product of the sampling frequency and oversampling factor (ADC Frequency = Fs * OS).
# After oversampling, the accumulated samples are summed up and divided by the
# oversampling factor to generate a single output sample.
fast_adc:
  pin: GPIO34

  # The rate at which individual samples are taken from the 'fast_adc' component is referred
  # to as the sampling frequency.
  frequency: 4000Hz

  # Optional, the extent to which additional samples are taken within each sampling period,
  # effectively increasing the resolution of the analog-to-digital conversion. Default: 20
  oversampling: 20

  # Optional, the mapping between raw ADC values and their corresponding millivolt values.
  # It must contain 4096 values. Default: ADC factory calibration.
  calibration: [0, 2, 2.3, ...]

sensor:
  # Utilizes the 'fast_adc' component to measure AC voltage.
  - platform: ac_voltage
    id: mains_voltage
    name: Mains Voltage
    mains_frequency: 50Hz

    # Optional, scaling factor applied to the sensor readings to convert ADC volts into mains voltage. Default: 207.4
    multiplier: 207.4

    # Optional, The midpoint represents the reference voltage level for the alternating current. Default: 311V
    midpoint: 311V

ac_transfer_switch:
  ac_voltage: mains_voltage

  # Optional, the delay duration before initiating a switch to the backup power source. Default: 5ms
  backup_switch_delay: 5ms

  # Optional, the voltage threshold below which, if sustained for the duration specified by
  # backup_switch_delay, triggers an instant switch to the backup power source. Default: 80V
  backup_switch_voltage_threshold: 80V

  # Optional, the delay duration before returning to the primary power source after using the backup. Default: 1s
  primary_switch_delay: 1s

  # Optional, the component will only initiate a switch back to the primary power source
  # if the RMS voltage remains greater than or equal to this threshold for the duration
  # specified by primary_switch_delay. Default: 150V
  primary_switch_voltage_rms_threshold: 150V
  output: relay
  power:
    name: Mains
